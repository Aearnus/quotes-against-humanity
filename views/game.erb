<html>
	<head>
		<title>
			Quotes Against Humanity
		</title>
		<script type="text/javascript">
		//--------HELPER FUNCTIONS--------
		function errorDialog(problem) {
			alert("Something has gone terribly wrong! Please refresh the page. Report this to the developer: " + problem);
		}
		function cardFromId(id) {
			var tempCard = cards[id];
			if (tempCard["id"] != id) {
				errorDialog("cardFromIdMismatch");
			}
			return tempCard;
		}

		//--------RANDOM RENDERING FUNCTIONS--------
		function displayTimer(time) {
			document.getElementById("countdownTimer").innerHTML = time;
		}
		function displayScene(scene) {
			document.getElementById("sceneCounter").innerHTML = scene;
		}
		function displayPlayers(playerList) {
			document.getElementById("playerList").innerHTML = "";
			for (var i = 0; i < playerList.length; i++) {
				var playerElement = document.createElement("p");
				playerElement.id = "name-" + playerList[i];
				playerElement.name = playerList[i];
				playerElement.innerHTML = playerList[i]["nick"];
				document.getElementById("playerList").appendChild(playerElement);
			}
		}
		function displayPlacedCards(cardArray) {
			document.getElementById("cardsInPlay").innerHTML = "";
			for (var i = 0; i < cardArray.length; i++) {
				var cardElement = document.createElement("p");
				cardElement.id = "placed-card-" + cardArray[i];
				cardElement.name = cardArray[i];
				cardElement.innerHTML = cardFromId(cardArray[i])["quote"];
				document.getElementById("cardsInPlay").appendChild(cardElement);
			}
		}

		//--------INVENTORY FUNCTIONS--------
		function displayInventory(inventoryArray) {
			document.getElementById("cardInventory").innerHTML = "";
			for (var i = 0; i < inventoryArray.length; i++) {
				var cardElement = document.createElement("p");
				cardElement.id = "card-" + inventoryArray[i];
				cardElement.setAttribute("name", inventoryArray[i]);
				cardElement.innerHTML = cardFromId(inventoryArray[i])["quote"];
				cardElement.addEventListener("click", function(event) 
				{ 
					var currentElement = event.target || event.srcElement;
					gameSocket.send(JSON.stringify({type: 'playCard', data: [Number.parseInt(currentElement.getAttribute("name"))]}));
				});
				document.getElementById("cardInventory").appendChild(cardElement);
			}
		}

		//--------SOCKET FUNCTIONS--------
		function parseSocketMessage(e) {
			console.log(e.data);
			var message = JSON.parse(e.data);
			switch (message["type"]) {
				case "inventory": //updates client inventory
					displayInventory(message["data"]);
					break;
				case "gameState": //everything that isn't your inventory
					displayTimer(message["data"]["timer"]);
					displayScene(message["data"]["currentScene"]);
					displayPlacedCards(message["data"]["placedCards"]);
					displayPlayers(message["data"]["players"]);
					break;
			}
		}
		function sockMe() {
			gameSocket = new WebSocket("ws://98.177.203.231:12975/");
			gameSocket.onopen = function () {
				console.log("connected to server");
			}
			gameSocket.onclose = function () {
				errorDialog("socketClosed");
			}
			gameSocket.onerror = function () {
				errorDialog("socketError");
			}
			gameSocket.onmessage = parseSocketMessage;
		}

		//--------INIT FUNCTION--------
		function init() {
			sockMe();
			cards = <%= $CARDS %>
		}

		window.onload = init;
		</script>
	</head>
	<body>
		<h1>Quotes Against Humanity</h1>
		<h2>Timer:</h2>
		<h3 id="countdownTimer"></h3>
		<h2>currentScene:</h2>
		<h3 id="sceneCounter"></h3>
		<h2>Players:</h2>
		<p id="playerList"></p>
		<h2>Cards in play:</h3>
		<p id="blackCard" style="background: rgb(255, 255, 255); font-color: rgb(0,0,0);"></p>
		<p id="cardsInPlay"></p>
		<h3>Your cards:</h3>
		<p id="cardInventory"></p>
	</body>
</html>