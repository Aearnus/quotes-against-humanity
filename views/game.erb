<html>
	<head>
		<title>
			Quotes Against Humanity
		</title>
		<script type="text/javascript">
		//--------HELPER FUNCTIONS--------
		function errorDialog(problem) {
			alert("Something has gone terribly wrong! Please refresh the page. Report this to the developer: " + problem);
		}
		function cardFromId(id) {
			var tempCard = cards[id];
			if (tempCard["id"] != id) {
				errorDialog("cardFromIdMismatch");
			}
			return tempCard;
		}

		//--------INVENTORY FUNCTIONS--------
		function getInventory() {
			gameSocket.send(JSON.stringify({type: "getInventory"}));
		}
		function displayInventory(inventoryArray) {
			for (var i = 0; i < inventoryArray.length; i++) {
				var cardElement = document.createElement("p");
				cardElement.id = "card-" + inventoryArray[i];
				cardElement.name = inventoryArray[i];
				cardElement.innerHTML = cardFromId(inventoryArray[i])["quote"];
				document.getElementById("cardInventory").appendChild(cardElement);
			}
		}

		//--------SOCKET FUNCTIONS--------
		function parseSocketMessage(e) {
			console.log(e.data);
			var message = JSON.parse(e.data);
			switch (message["type"]) {
				case "inventory": //updates client inventory
					displayInventory(message["data"]);
					break;
				case "timer": //updates client countdown timer

					break;
				case "blackCard": //updates currently shown black card

					break;
			}
		}
		function sockMe() {
			gameSocket = new WebSocket("ws://98.177.203.231:12975/");
			gameSocket.onopen = function () {
				console.log("connected to server");
			}
			gameSocket.onclose = function () {
				console.log("connection unboop");
			}
			gameSocket.onerror = function () {
				console.log("connection broke boop");
			}
			gameSocket.onmessage = parseSocketMessage;
		}

		//--------INIT FUNCTION--------
		function init() {
			sockMe();
			cards = <%= $CARDS %>
		}

		window.onload = init;
		</script>
	</head>
	<body>
		<p id="cardInventory"></p>
	</body>
</html>