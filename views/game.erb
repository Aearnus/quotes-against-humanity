<html>
	<head>
		<title>
			Quotes Against Humanity
		</title>
		<script type="text/javascript">
		//--------HELPER FUNCTIONS--------
		function errorDialog(problem) {
			alert("Something has gone terribly wrong! Please refresh the page. Report this to the developer: " + problem);
		}
		function cardFromId(id) {
			var tempCard = cards[id];
			if (tempCard["id"] != id) {
				errorDialog("cardFromIdMismatch");
			}
			return tempCard;
		}
		function blackCardFromId(id) {
			var tempCard = blackCards[id];
			if (tempCard["id"] != id) {
				errorDialog("blackCardFromIdMismatch");
			}
			return tempCard;
		}

		//--------RANDOM RENDERING FUNCTIONS--------
		function displayTimer(time) {
			document.getElementById("countdownTimer").innerHTML = time;
		}
		function displayScene(scene) {
			document.getElementById("sceneCounter").innerHTML = (scene == 0 ? "Play a card!" : "The Card Chooser is choosing.");
		}
		function displayPlayers(playerList, cardChooser) {
			document.getElementById("playerList").innerHTML = "";
			for (var i = 0; i < playerList.length; i++) {
				var playerElement = document.createElement("p");
				playerElement.id = "name-" + playerList[i]["nick"];
				playerElement.setAttribute("name", playerList[i]["nick"]);
				if (playerList[i]["is_card_chooser"] == true) {
					playerElement.innerHTML = playerList[i]["nick"] + " (card chooser)";
				} else {
					playerElement.innerHTML = playerList[i]["nick"];
				}
				var scoreElement = document.createElement("p");
				scoreElement.id = "score-" + playerList[i]["nick"];
				scoreElement.setAttribute("name", playerList[i]["nick"]);
				scoreElement.innerHTML = "Score: " + playerList[i]["points"];
				document.getElementById("playerList").appendChild(playerElement);
				document.getElementById("playerList").appendChild(scoreElement);
			}
		}
		function displayPlacedCards(cardArray, winningCard, players) {
			document.getElementById("cardsInPlay").innerHTML = "";
			for (var i = 0; i < cardArray.length; i++) {
				var cardElement = document.createElement("p");
				cardElement.id = "placed-card-" + cardArray[i]["card"];
				cardElement.setAttribute("name", i);
				if (winningCard == -1) {
					cardElement.innerHTML = cardFromId(cardArray[i]["card"])["quote"];
					if (amCardChooser) {
						cardElement.addEventListener("click", function(event) 
						{ 
							var currentElement = event.target || event.srcElement;
							console.log("sending " + JSON.stringify({type: "chooseCard", data: Number.parseInt(currentElement.getAttribute("name"))}));
							gameSocket.send(JSON.stringify({type: "chooseCard", data: Number.parseInt(currentElement.getAttribute("name"))}));
						});
					}
				} else {
					console.log(players);
					cardElement.innerHTML = cardFromId(cardArray[i]["card"])["quote"] + " -" + players[cardArray[i]["player"]["nick"]];
					if (i == winningCard) {
						cardElement.style.background = "rgb(255,255,0)";
					}
				}
				document.getElementById("cardsInPlay").appendChild(cardElement);
			}
		}
		function displayBlackCard(card) {
			document.getElementById("blackCard").innerHTML = blackCardFromId(card)["quote"];
		}
		function displayIsCardChooser(isCardChooser) {
			if (isCardChooser) {
				document.getElementById("isCardChooser").style.display = "block"
				amCardChooser = true;
			} else {
				document.getElementById("isCardChooser").style.display = "none"
				amCardChooser = false;
			}
		}


		//--------INVENTORY FUNCTIONS--------
		function displayInventory(inventoryArray, can_place_cards) {
			document.getElementById("cardInventory").innerHTML = "";
			for (var i = 0; i < inventoryArray.length; i++) {
				var cardElement = document.createElement("p");
				cardElement.id = "card-" + inventoryArray[i];
				cardElement.setAttribute("name", inventoryArray[i]);
				cardElement.innerHTML = cardFromId(inventoryArray[i])["quote"];
				if (can_place_cards) {
					cardElement.addEventListener("click", function(event) 
					{ 
						var currentElement = event.target || event.srcElement;
						gameSocket.send(JSON.stringify({type: 'playCard', data: [Number.parseInt(currentElement.getAttribute("name"))]}));
					});
				} else {
					cardElement.style.cssText = "color: grey;";
				}
				document.getElementById("cardInventory").appendChild(cardElement);
			}
		}

		//--------SOCKET FUNCTIONS--------
		function parseSocketMessage(e) {
			console.log(e.data);
			var message = JSON.parse(e.data);
			switch (message["type"]) {
				case "inventory": //updates client inventory
					displayInventory(message["data"]["inventory"], message["data"]["can_place_cards"]);
					displayIsCardChooser(message["data"]["is_card_chooser"])
					break;
				case "gameState": //everything that isn't your inventory
					displayTimer(message["data"]["timer"]);
					displayScene(message["data"]["currentScene"]);
					displayPlacedCards(message["data"]["placedCards"], message["data"]["chosenCard"], message["data"]["players"]);
					displayPlayers(message["data"]["players"], message["data"]["cardChooser"]);
					displayBlackCard(message["data"]["blackCard"]);
					break;
			}
		}
		function sockMe() {
			gameSocket = new WebSocket("ws://98.177.203.231:12975/");
			gameSocket.onopen = function () {
				console.log("connected to server");
			}
			gameSocket.onclose = function () {
				errorDialog("socketClosed");
			}
			gameSocket.onerror = function () {
				errorDialog("socketError");
			}
			gameSocket.onmessage = parseSocketMessage;
		}

		//--------INIT FUNCTION--------
		function init() {
			sockMe();
			cards = <%= $CARDS %>
			blackCards = <%= $BLACK_CARDS %>
			amCardChooser = false;
		}

		window.onload = init;
		</script>
	</head>
	<body>
		<h1>Quotes Against Humanity</h1>
		<h2>Timer:</h2>
		<h3 id="countdownTimer"></h3>
		<h3 id="sceneCounter"></h3>
		<h2>Players:</h2>
		<p id="playerList"></p>
		<h2>Cards in play:</h2>
		<h3 id="isCardChooser" style="display:none;background:rgb(200,200,200)">You are the card chooser! Click a card to choose it as the best one.</h3>
		<p id="blackCard" style="background: rgb(0,0,0); color: rgb(255, 255, 255);"></p>
		<p id="cardsInPlay"></p>
		<h3>Your cards:</h3>
		<p id="cardInventory"></p>
	</body>
</html>